syntax="proto3";

package main;

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

option go_package = "./eventbroker_public";

service EventBrokerService {
  rpc PostEvent (PostEventRequest) returns (PostEventResponse) {}
  rpc Subscribe (SubscribeRequest) returns (SubscribeResponse) {}
  rpc Unsubscribe (UnsubscribeRequest) returns (UnsubscribeResponse) {}
}

message EventHeader {
  string key = 1;
  string value = 2;
}

message EventPayload {
  string content_type = 1;
  google.protobuf.Value data = 2;
}

message PostEventRequest {
  string event_id = 1;
  string correlation_id = 2;
  string source = 3;
  string event = 4;
  google.protobuf.Timestamp created_at = 5;
  repeated EventHeader headers = 6;
  EventPayload payload = 7;
}

message PostEventResponse {
  string event_id = 1;
  string correlation_id = 2;
  google.protobuf.Timestamp created_at = 3;
  repeated EventHeader headers = 4;
  EventPayload response = 5;
}

enum QueueType {
  PUSH = 0;
  PULL = 1;
}

message QueueDefinition {
  string queue_name = 1;
  QueueType queue_type = 2;
  string uri = 3;
  map<string, string> arguments = 4;
}

message SubscribeRequest {
  string event = 1;
  QueueDefinition queue = 2;
  string source = 3;
}

message SubscribeResponse {
  string subscription_id = 1;
  repeated QueueDefinition queues = 2;
}

message UnsubscribeRequest {
  string subscription_id = 1;
}

message UnsubscribeResponse {
  bool status = 1;
}

